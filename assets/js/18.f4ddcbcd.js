(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{222:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"事件接收器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件接收器"}},[t._v("#")]),t._v(" 事件接收器")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#什么是事件接收器-event-receiver"}},[t._v("什么是事件接收器(Event Receiver)")])]),a("li",[a("a",{attrs:{href:"#注册事件监听"}},[t._v("注册事件监听")]),a("ul",[a("li",[a("a",{attrs:{href:"#事件的多种监听方式"}},[t._v("事件的多种监听方式")])])])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"什么是事件接收器-event-receiver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是事件接收器-event-receiver"}},[t._v("#")]),t._v(" 什么是事件接收器(Event Receiver)")]),t._v(" "),a("p",[t._v("事件接收器用于接收来自无头客户端的事件, 聚合当前处理的事件信息, 并封装为上下文以供事件运行主体调用")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("此处为高级特性, 若你还没学会之前叙述的各式用法,\n建议你跳过此节, 之后再来学习")])]),t._v(" "),a("h2",{attrs:{id:"注册事件监听"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册事件监听"}},[t._v("#")]),t._v(" 注册事件监听")]),t._v(" "),a("p",[t._v("我们都知道, 当要注册一个事件监听时, 要使用装饰器的工厂方法 "),a("code",[t._v("Session.receiver")]),t._v(",\n为注册的事件监听提供事件的基本类型:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("receiver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GroupMessage"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("event_gm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"事件的多种监听方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件的多种监听方式"}},[t._v("#")]),t._v(" 事件的多种监听方式")]),t._v(" "),a("p",[t._v("你不仅可以使用字符串表达出你想监听的事件, 还可以用另外两种方式:")]),t._v(" "),a("ul",[a("li",[t._v("传入事件模型, 全部的事件模型在 "),a("code",[t._v("mirai.event.external")]),t._v(" 处被定义, 也可以直接从 "),a("code",[t._v("mirai")]),t._v(" 下导入, 这是推荐的做法.")]),t._v(" "),a("li",[t._v("传入一个 "),a("code",[t._v("Enum Value")]),t._v(", 这意味着你可以通过遍历一个枚举类的方式来批量注册事件监听.")])]),t._v(" "),a("p",[t._v("如果你对光秃秃的字符串感到畏惧, 你可以尝试下使用这两种方式.")])])}),[],!1,null,null,null);s.default=n.exports}}]);